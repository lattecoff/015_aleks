'''
–ó–∞–¥–∞—á–∞
üîπ –î–æ–±–∞–≤—å—Ç–µ –º–∞–≥–∏—á–µ—Å–∫–∏–µ –º–µ—Ç–æ–¥—ã __getitem__ –∏ __setitem__ –≤ –≤–∞—à —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π –∫–ª–∞—Å—Å.

üîπ –î–æ–±–∞–≤—å—Ç–µ –æ–¥–∏–Ω —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –∏ –æ–¥–∏–Ω –∫–ª–∞—Å—Å–æ–≤—ã–π –º–µ—Ç–æ–¥ –∫ –≤–∞—à–µ–º—É –∫–ª–∞—Å—Å—É.
'''


class Transformer:
    planet = 'Kybertron'
    isorganic = False

    def __init__(self, name, type, state, weapon,  health, x, y):
        self.name = name
        self.type = type
        self.state = state
        self.weapon = list(weapon)
        self.health = health
        self.x = x
        self.y = y


    def __getitem__(self, item):
        if 0 <= item < len(self.weapon):
            return self.weapon[item]
        else:
            raise IndexError('Slot out of range')


    def __setitem__(self, key, value):
        if key < 6:
            pass
        else:
            raise IndexError('Slot overflow')


    def transform_direct(self):
        """
        –ú–µ–Ω—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–µ—Ä–∞ –∏–∑ –≥—É–º–∞–Ω–æ–∏–¥–∞ –≤ –∞–≤—Ç–æ.
        :return:
        """
        if self.state == 'car':
            print('transform already finished.')
        else:
            self.state = 'car'

    def transform_reverse(self):
        """
        –ú–µ–Ω—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–µ—Ä–∞ –∏–∑ –∞–≤—Ç–æ –≤ –≥—É–º–∞–Ω–æ–∏–¥–∞.
        :return:
        """
        if self.state == 'humanoid':
            print('transform already finished.')
        else:
            self.state = 'humanoid'

    def move(self, x, y):
        """
        –ú–µ–Ω—è—Ç –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–µ—Ä–∞.
        :return:
        """
        self.x = x
        self.y = y

    def shoot(self, armor):
        """
        –ê—Ç–∞–∫–∞.
        :return: –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–æ—Ü–µ–Ω—Ç —É—Ä–æ–Ω–∞.
        """
        if armor == 'basic':
            return 20
        elif armor == 'additional':
            return 35

    def about(self):
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–±—ä–µ–∫—Ç–∞.
        :return:.
        """
        print(self.name)
        print(self.type)
        print(self.state)
        print(self.health)
        print(self.x)
        print(self.y)

bumblebee = Transformer('Optimus', 'autobot', 'humanoid', ['pistols', 'grenade', 'laser'],100, 0, 0)

print(bumblebee.weapon[2])
